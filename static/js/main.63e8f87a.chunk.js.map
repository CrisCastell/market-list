{"version":3,"sources":["components/Item.js","components/Loading.js","components/Todo.js","App.js","index.js"],"names":["Item","props","key","id","className","isCompleted","style","index","textDecoration","title","onClick","changeStatus","task","disabled","quantity","value","name","onChange","type","checked","Loading","defaultOptions","loop","autoplay","animationData","loading","rendererSettings","preserveAspectRatio","options","height","width","Todo","getCookie","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fetchFunc","fetch","then","response","json","data","setState","todos","contentLoaded","catch","err","console","log","handleChange","event","target","currentTodo","state","handleSubmit","preventDefault","initObject","method","headers","body","JSON","stringify","isEdited","csrftoken","completedTask","this","todoList","map","item","onSubmit","placeholder","maxLength","React","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63e8f87a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Item(props){\r\n    \r\n    return(\r\n        \r\n        <div key={props.id} className={ `todo ${props.isCompleted ? \"done\" : \"\"}`} style={{\r\n            'animationDelay':`calc(${props.index * 200} ms)`}}>\r\n            <div className=\"text\">\r\n                <p style={{textDecoration: props.isCompleted ? \"line-through\" : \"none\" }}>{props.title}</p>\r\n            </div>\r\n            <div className=\"button-wrapper\">\r\n                \r\n                <div className=\"quantity-box\">\r\n                    <button id=\"decrease-btn\" className=\"quant-btn btn left\" onClick={()=> props.changeStatus(props.task, \"decrease\")}  disabled={props.quantity <= 1 || props.isCompleted ? true : false } value=\"decrease\" name=\"decrease\"> - </button>\r\n                    <div className=\"quantity\" id=\"quantity\">{props.quantity}</div>\r\n                    <button id=\"increase-btn\" className=\"quant-btn btn right\" onClick={()=> props.changeStatus(props.task, \"increase\")} disabled={props.isCompleted} value=\"increase\" name=\"delete\"> + </button>\r\n                </div>\r\n                <div>\r\n                <button id=\"del-btn\" className=\"btn\" onClick={()=> props.changeStatus(props.task, \"delete\")}  value=\"delete\" name=\"delete\"> del </button>\r\n                </div>\r\n                <input onChange={()=> props.changeStatus(props.task, \"isComplete\")} type=\"checkbox\" checked={props.isCompleted}></input>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Item","import React from 'react';\r\nimport Lottie from 'react-lottie'\r\nimport * as loading from './8815-loading-animation.json'\r\n\r\n\r\nconst Loading = () => {\r\n    \r\n  \r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: loading.default,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n  \r\n    return (\r\n        <div>\r\n        <Lottie options={defaultOptions}\r\n                height={150}\r\n                width={150} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Loading","import React from 'react'\r\nimport Item from './Item'\r\nimport Loading from './Loading'\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            contentLoaded:true,\r\n            name: \"Cristiam\",\r\n            currentTodo:{\r\n                id:null,\r\n                title:\"\",\r\n                isCompleted:false,\r\n                quantity:1,\r\n                isEdited:false,\r\n            },\r\n            todos:[]\r\n        }\r\n    }\r\n\r\n    getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n\r\n    fetchFunc = () => {\r\n        fetch('https://cristiamportfolioapis.herokuapp.com/todo/')\r\n        .then(response=>response.json())\r\n        .then(data => {\r\n            this.setState({todos:data, contentLoaded:true})\r\n        })\r\n        .catch(err => console.log(\"Error: \", err))\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState({contentLoaded:false})\r\n        this.fetchFunc()\r\n    }\r\n\r\n    handleChange= (event) =>{\r\n        const title = event.target.value\r\n        this.setState({\r\n            currentTodo:{\r\n            ...this.state.currentTodo, title:title}\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit= (event) => {\r\n        event.preventDefault()\r\n        const csrftoken = this.getCookie('csrftoken')\r\n        const initObject = {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken\r\n            },\r\n            body: JSON.stringify(this.state.currentTodo)\r\n        }\r\n\r\n        fetch('https://cristiamportfolioapis.herokuapp.com/todo/create-task', initObject)\r\n        .then(data =>{\r\n            console.log(data)\r\n            this.fetchFunc()\r\n            this.setState({\r\n                currentTodo:{id:null, title:\"\", isCompleted:false, quantity:1, isEdited:false}\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    changeStatus = (task,name) =>{\r\n        const csrftoken = this.getCookie('csrftoken')\r\n        if(name === \"delete\"){\r\n            const initObject = {\r\n                method: 'DELETE',\r\n                headers:{\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken\r\n                },\r\n            }\r\n\r\n            fetch(`https://cristiamportfolioapis.herokuapp.com/todo/delete-task/${task.id}`, initObject)\r\n            .then(data =>{\r\n                console.log(data)\r\n                this.fetchFunc()\r\n            }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            let completedTask = {\r\n                id:task.id,\r\n                title:task.title,\r\n                isCompleted: task.isCompleted,\r\n                quantity:task.quantity,\r\n                isEdited:false\r\n            }\r\n\r\n            if(name=== \"isComplete\"){\r\n                \r\n                completedTask.isCompleted = !task.isCompleted;\r\n            }\r\n            else if(name === 'increase'){\r\n                completedTask.quantity = task.quantity + 1;\r\n            }\r\n            else if(name === 'decrease'){\r\n                completedTask.quantity = task.quantity - 1;\r\n            }\r\n            const initObject = {\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken\r\n                },\r\n                body: JSON.stringify(completedTask)\r\n            }\r\n\r\n            fetch(`https://cristiamportfolioapis.herokuapp.com/todo/edit-task/${task.id}`, initObject)\r\n            .then(data =>{\r\n                console.log(data)\r\n                this.fetchFunc()\r\n            }).catch(err => console.log(err))\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        const todoList = this.state.todos.map((item,index)=>{\r\n            console.log(index)\r\n            return(\r\n            <Item key={index} id={index} task={item} index={index} isCompleted={item.isCompleted} quantity={item.quantity}\r\n                changeStatus={this.changeStatus} title={item.title}/>\r\n            )\r\n        })\r\n                \r\n        return(\r\n            <div className=\"App\">\r\n                <div className=\"content\">\r\n                    <form onSubmit={this.handleSubmit} id=\"todo-form\">\r\n                        <div className=\"input\">\r\n                            <input id=\"inp\" onChange={this.handleChange} \r\n                            name=\"title\" type=\"text\" \r\n                            value={this.state.currentTodo.title} \r\n                            placeholder=\"New Item?\"\r\n                            maxLength={15}\r\n                            />\r\n\r\n                            <button  className=\"btn\" id=\"sub-btn\" type=\"submit\">Add Item</button>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                    {!this.state.contentLoaded ? <Loading /> : todoList}\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo","import React from 'react';\nimport './App.css';\nimport Todo from './components/Todo'\n\nfunction App()  {\n  \n    return (\n        <Todo />\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}