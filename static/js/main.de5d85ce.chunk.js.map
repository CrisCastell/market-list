{"version":3,"sources":["components/Item.js","components/Todo.js","App.js","index.js"],"names":["Item","props","key","id","className","isCompleted","style","index","textDecoration","title","onClick","changeStatus","task","disabled","quantity","value","name","onChange","type","checked","Todo","getCookie","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fetchFunc","fetch","then","response","json","data","setState","todos","catch","err","console","log","handleChange","event","target","currentTodo","state","handleSubmit","preventDefault","initObject","method","headers","body","JSON","stringify","isEdited","csrftoken","completedTask","this","todoList","map","item","onSubmit","placeholder","maxLength","React","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de5d85ce.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Item(props){\r\n    \r\n    return(\r\n        \r\n        <div key={props.id} className={ `todo ${props.isCompleted ? \"done\" : \"\"}`} style={{\r\n            'animationDelay':`calc(${props.index * 200} ms)`}}>\r\n            <div>\r\n                <p style={{textDecoration: props.isCompleted ? \"line-through\" : \"none\" }}>{props.title}</p>\r\n            </div>\r\n            <div className=\"button-wrapper\">\r\n                \r\n                <div className=\"quantity-box\">\r\n                    <button id=\"decrease-btn\" className=\"quant-btn btn\" onClick={()=> props.changeStatus(props.task, \"decrease\")}  disabled={props.quantity <= 1 ? true : false } value=\"decrease\" name=\"decrease\"> - </button>\r\n                    <div className=\"quantity\" id=\"quantity\">{props.quantity}</div>\r\n                    <button id=\"increase-btn\" className=\"quant-btn btn\" onClick={()=> props.changeStatus(props.task, \"increase\")}  value=\"increase\" name=\"delete\"> + </button>\r\n                </div>\r\n                <div>\r\n                <button id=\"del-btn\" onClick={()=> props.changeStatus(props.task, \"delete\")}  value=\"delete\" name=\"delete\"> del </button>\r\n                </div>\r\n                <input onChange={()=> props.changeStatus(props.task, \"isComplete\")} type=\"checkbox\" checked={props.isCompleted}></input>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport Item from './Item'\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: \"Cristiam\",\r\n            currentTodo:{\r\n                id:null,\r\n                title:\"\",\r\n                isCompleted:false,\r\n                quantity:1,\r\n                isEdited:false,\r\n            },\r\n            todos:[]\r\n        }\r\n    }\r\n\r\n    getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n\r\n    fetchFunc = () => {\r\n        fetch('https://cristiamportfolioapis.herokuapp.com/todo/')\r\n        .then(response=>response.json())\r\n        .then(data => {\r\n            this.setState({todos:data})\r\n        })\r\n        .catch(err => console.log(\"Error: \", err))\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.fetchFunc()\r\n    }\r\n\r\n    handleChange= (event) =>{\r\n        const title = event.target.value\r\n        this.setState({\r\n            currentTodo:{\r\n            ...this.state.currentTodo, title:title}\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit= (event) => {\r\n        event.preventDefault()\r\n        const csrftoken = this.getCookie('csrftoken')\r\n        const initObject = {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken\r\n            },\r\n            body: JSON.stringify(this.state.currentTodo)\r\n        }\r\n\r\n        fetch('https://cristiamportfolioapis.herokuapp.com/todo/create-task', initObject)\r\n        .then(data =>{\r\n            console.log(data)\r\n            this.fetchFunc()\r\n            this.setState({\r\n                currentTodo:{id:null, title:\"\", isCompleted:false, quantity:1, isEdited:false}\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    changeStatus = (task,name) =>{\r\n        const csrftoken = this.getCookie('csrftoken')\r\n        if(name === \"delete\"){\r\n            const initObject = {\r\n                method: 'DELETE',\r\n                headers:{\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken\r\n                },\r\n            }\r\n\r\n            fetch(`https://cristiamportfolioapis.herokuapp.com/todo/delete-task/${task.id}`, initObject)\r\n            .then(data =>{\r\n                console.log(data)\r\n                this.fetchFunc()\r\n            }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            let completedTask = {\r\n                id:task.id,\r\n                title:task.title,\r\n                isCompleted: task.isCompleted,\r\n                quantity:task.quantity,\r\n                isEdited:false\r\n            }\r\n\r\n            if(name=== \"isComplete\"){\r\n                \r\n                completedTask.isCompleted = !task.isCompleted;\r\n            }\r\n            else if(name === 'increase'){\r\n                completedTask.quantity = task.quantity + 1;\r\n            }\r\n            else if(name === 'decrease'){\r\n                completedTask.quantity = task.quantity - 1;\r\n            }\r\n            const initObject = {\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken\r\n                },\r\n                body: JSON.stringify(completedTask)\r\n            }\r\n\r\n            fetch(`https://cristiamportfolioapis.herokuapp.com/todo/edit-task/${task.id}`, initObject)\r\n            .then(data =>{\r\n                console.log(data)\r\n                this.fetchFunc()\r\n            }).catch(err => console.log(err))\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        const todoList = this.state.todos.map((item,index)=>{\r\n            console.log(index)\r\n            return(\r\n            <Item key={index} id={index} task={item} index={index} isCompleted={item.isCompleted} quantity={item.quantity}\r\n                changeStatus={this.changeStatus} title={item.title}/>\r\n            )\r\n        })\r\n                \r\n        return(\r\n            <div className=\"App\">\r\n                <div className=\"content\">\r\n                    <form onSubmit={this.handleSubmit} id=\"todo-form\">\r\n                        <div className=\"input\">\r\n                            <input id=\"inp\" onChange={this.handleChange} \r\n                            name=\"title\" type=\"text\" \r\n                            value={this.state.currentTodo.title} \r\n                            placeholder=\"New Task?\"\r\n                            maxLength={30}\r\n                            />\r\n\r\n                            <button  className=\"btn\" id=\"btn\" type=\"submit\">Add Item</button>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                    {todoList}\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo","import React from 'react';\nimport './App.css';\nimport Todo from './components/Todo'\n\nfunction App()  {\n  \n    return (\n        <Todo />\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}